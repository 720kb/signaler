{"version":3,"sources":["observable-state.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAM,UAAU,QAAQ,iBAAR,CAAV;AAAN;IACI,KAAK,QAAQ,SAAR,CAAL;IACA,aAAa,OAAO,SAAP,CAAb;IACA,gBAAgB,IAAI,GAAJ,EAAhB;;IAEE;;;AACJ,WADI,eACJ,GAAc;;;0BADV,iBACU;;AAEZ,QAAM,qBAAqB,IAAI,GAAG,UAAH,CAAc,sBAAc;;AAEzD,YAAK,UAAL,IAAmB;AACjB,eAAO,aAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA6B;;AAElC,iBAAO,QAAP,IAAmB,KAAnB,CAFkC;AAGlC,qBAAW,IAAX,CAAgB;AACd,oBAAQ,OAAR;AACA,wBAFc;WAAhB,EAHkC;SAA7B;AAQP,0BAAkB,wBAAC,MAAD,EAAS,QAAT,EAAsB;;AAEtC,kBAAQ,IAAR,CAAa,MAAb,EAAqB,QAArB,EAFsC;SAAtB;OATpB,CAFyD;KAAd,CAAlB,CAgBxB,KAhBwB,EAArB,CAFM;;0EADV,4BAqBI,oBAAY;;AAEhB,UAAM,mCAAmC,mBACtC,SADsC,CAC5B,QAD4B,CAAnC,CAFU;;AAKhB,aAAO,YAAM;;AAEX,yCAAiC,WAAjC,GAFW;OAAN,CALS;KAAZ,GApBM;GAAd;;eADI;;sCAiCc,aAAa;;AAE7B,oBAAc,GAAd,cAA6B,WAA7B,EAA4C,IAAI,KAAJ,CAAU,EAAV,EAAc,KAAK,UAAL,CAAd,CAA5C,EAF6B;;;;sCAKb,aAAa;;AAE7B,aAAO,cAAc,GAAd,cAA6B,WAA7B,CAAP,CAF6B;;;;oCAKf,aAAa;;AAE3B,aAAO,cAAc,GAAd,cAA6B,WAA7B,CAAP,CAF2B;;;;SA3CzB;EAAwB,GAAG,UAAH;;AAiD9B,OAAO,OAAP,GAAiB,eAAjB","file":"observable-state.js","sourcesContent":["/*global module,require*/\n\nconst Reflect = require('harmony-reflect') //TODO remove this when V8 49 land in node\n  , Rx = require('rxjs/Rx')\n  , handlerSym = Symbol('handler')\n  , signalerState = new Map();\n\nclass ObservableState extends Rx.Observable {\n  constructor() {\n\n    const internalObservable = new Rx.Observable(subscriber => {\n\n      this[handlerSym] = {\n        'set': (target, property, value) => {\n\n          target[property] = value;\n          subscriber.next({\n            'type': 'added',\n            value\n          });\n        },\n        'deleteProperty': (target, property) => {\n\n          console.info(target, property);\n        }\n      }\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n  }\n\n  addChannelInState(channelName) {\n\n    signalerState.set(`channel-${channelName}`, new Proxy({}, this[handlerSym]));\n  }\n\n  getChannelInState(channelName) {\n\n    return signalerState.get(`channel-${channelName}`);\n  }\n\n  containsInState(channelName) {\n\n    return signalerState.has(`channel-${channelName}`);\n  }\n}\n\nmodule.exports = ObservableState;\n"],"sourceRoot":"/source/"}