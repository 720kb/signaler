{"version":3,"file":"signaler.js","sources":["../../lib/frontend/p2p.js","../../lib/frontend/signaler.js"],"sourcesContent":["/*global RTCPeerConnection,RTCSessionDescription*/\nimport Rx from 'rxjs/Rx';\n\nconst rtcConfiguration = {\n    'iceServers': [\n      {\n        'urls': 'stun:stun.l.google.com:19302'\n      },\n      {\n        'urls': 'stun:23.21.150.121'\n      }\n    ]\n  }\n  , rtcOptions = {}\n  , rtcDataChannelOptions = {}\n  , iceCandidates = []\n  , peerConnectionSym = Symbol('peer-connection')\n  , dataChannelSym = Symbol('data-channel');\n\nclass SignalerPeerConnection extends Rx.Observable {\n\n  constructor(sdpConstr) {\n\n    if (!sdpConstr) {\n\n      throw new Error('Manadatory spd constraints missing.');\n    }\n\n    const internalObservable = new Rx.Observable(subscriber => {\n      const dataChannelError = error => {\n\n        subscriber.error({\n          'type': 'error',\n          'cause': error\n        });\n      }\n      , dataChannelMessage = event => {\n\n        if (event &&\n          event.data) {\n\n          if ((typeof event.data === 'string' || String.prototype.isPrototypeOf(event.data)) &&\n            event.data.indexOf('_signaler') >= 0) {\n\n            switch (event.data) {\n              case '_signaler:got-stream?': {\n\n                subscriber.next({\n                  'type': 'add-stream'\n                });\n                break;\n              }\n              default: {\n\n                subscriber.error({\n                  'type': 'warn',\n                  'cause': 'Not interesting event atm'\n                });\n              }\n            }\n          } else {\n\n            subscriber.next({\n              'type': 'datachannel-message',\n              'payload': event.data\n            });\n          }\n        } else {\n\n          subscriber.error({\n            'type': 'error',\n            'cause': 'Event data not present'\n          });\n        }\n      }\n      , dataChannelOpen = () => {\n\n        subscriber.next({\n          'type': 'datachannel-opened'\n        });\n      }\n      , dataChannelClose = () => {\n\n        subscriber.next({\n          'type': 'datachannel-closed'\n        });\n      };\n\n      this[peerConnectionSym] = new RTCPeerConnection(rtcConfiguration, rtcOptions);\n      this[dataChannelSym] = this[peerConnectionSym].createDataChannel('signaler-datachannel', rtcDataChannelOptions);\n\n      this[dataChannelSym].onerror = dataChannelError;\n      this[dataChannelSym].onmessage = dataChannelMessage;\n      this[dataChannelSym].onopen = dataChannelOpen;\n      this[dataChannelSym].onclose = dataChannelClose;\n\n      this[peerConnectionSym].onicecandidate = event => {\n\n        if (event.candidate) {\n\n          iceCandidates.push(event.candidate);\n        } else if (iceCandidates &&\n          iceCandidates.length >= 0) {\n\n          subscriber.next({\n            'type': 'use-ice-candidates',\n            'candidates': iceCandidates.splice(0, iceCandidates.length)\n          });\n        }\n      };\n\n      this[peerConnectionSym].onaddstream = event => {\n\n        if (!event ||\n          !event.stream) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'No stream arrived'\n          });\n        }\n\n        subscriber.next({\n          'type': 'add-stream',\n          'stream': event.stream\n        });\n      };\n\n      this[peerConnectionSym].onremovestream = event => {\n\n        if (!event ||\n          !event.stream) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'No stream arrived'\n          });\n        }\n\n        subscriber.next({\n          'type': 'remove-stream',\n          'stream': event.stream\n        });\n      };\n\n      this[peerConnectionSym].onnegotiationneeded = () => {\n\n        this[peerConnectionSym].createOffer()\n          .then(offer => {\n\n            this[peerConnectionSym].setLocalDescription(new RTCSessionDescription(offer));\n            return offer;\n          }, error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          })\n          .then(offer => {\n\n            subscriber.next({\n              'type': 'offer',\n              offer\n            });\n          })\n          .catch(error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          });\n      };\n\n      this[peerConnectionSym].oniceconnectionstatechange = event => {\n\n        if (!event ||\n          !event.target ||\n          !event.target.iceConnectionState) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'ice connection state changed without event value'\n          });\n        }\n\n        switch (event.target.iceConnectionState) {\n\n          case 'connected':\n          case 'completed': {\n\n            subscriber.next({\n              'type': 'ready'\n            });\n            break;\n          }\n\n          default: {\n\n            subscriber.next({\n              'type': 'ice-connection-state',\n              'state': event.target.iceConnectionState\n            });\n          }\n        }\n      };\n\n      this[peerConnectionSym].onsignalingstatechange = event => {\n\n        if (!event ||\n          !event.target ||\n          !event.target.signalingState) {\n\n          return subscriber.error({\n            'type': 'error',\n            'cause': 'signaling state changed without event value'\n          });\n        }\n\n        switch (event.target.signalingState) {\n\n          default: {\n\n            subscriber.next({\n              'type': 'signaling-state',\n              'state': event.target.signalingState\n            });\n          }\n        }\n      };\n\n      this[peerConnectionSym].ondatachannel = event => {\n\n        if (!event ||\n          !event.channel) {\n\n          return subscriber.error({\n            'type': 'error',\n            'cause': 'channel in event is not present'\n          });\n        }\n\n        event.channel.onerror = dataChannelError;\n        event.channel.onmessage = dataChannelMessage;\n        event.channel.onopen = dataChannelOpen;\n        event.channel.onclose = dataChannelClose;\n      };\n\n      this.setRemoteDescription = payload => {\n\n        this[peerConnectionSym].setRemoteDescription(new RTCSessionDescription(payload))\n          .then(() => {\n\n            return this[peerConnectionSym].createAnswer(this.sdpConstr);\n          }, error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          })\n          .then(answer => {\n\n            this[peerConnectionSym].setLocalDescription(new RTCSessionDescription(answer));\n            return answer;\n          }, error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          })\n          .then(answer => {\n\n            subscriber.next({\n              'type': 'answer',\n              answer\n            });\n          })\n          .catch(error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          });\n      };\n\n      return () => {\n\n        this[dataChannelSym].close();\n        this[peerConnectionSym].close();\n      };\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n\n    this.sdpConstr = sdpConstr;\n  }\n\n  get dataChannel() {\n\n    if (!this[dataChannelSym]) {\n\n      throw new Error('Datachannel is not created');\n    }\n\n    return this[dataChannelSym];\n  }\n}\n\nexport {SignalerPeerConnection};\n","/*global navigator*/\nimport Rx from 'rxjs/Rx';\nimport {Comunicator} from 'comunicator';\nimport {SignalerPeerConnection} from './p2p.js';\n\nconst comunicatorSym = Symbol('comunicator')\n  , myStreamSym = Symbol('my-stream')\n  , userMediaConstraintsSym = Symbol('user-media-constraint')\n  , sdpConstraintsSym = Symbol('sdp-constraints')\n  , unknownPeerValue = 'unknown-peer'\n  , getUserMediaConstraints = {\n    'audio': true,\n    'video': true\n  }\n  , sdpConstraints = {\n    'mandatory': {\n      'OfferToReceiveAudio': true,\n      'OfferToReceiveVideo': true\n    }\n  };\n\nclass Signaler extends Rx.Observable {\n  constructor(websocketUrl, getUserMediaConstr = getUserMediaConstraints, sdpConstr = sdpConstraints) {\n\n    const internalObservable = new Rx.Observable(subscriber => {\n\n      this.getUserMedia = () => {\n\n        navigator.mediaDevices.getUserMedia(this.userMediaConstraints)\n          .then(localStream => {\n\n            if (!this[myStreamSym]) {\n\n              subscriber.next({\n                'type': 'my-stream',\n                'stream': localStream\n              });\n              this[myStreamSym] = localStream;\n            }\n\n            //TODO try to put the contextified audio\n            //audioContext.createMediaStreamSource(myStream);\n            //, contextifiedLocalStream = audioContext.createMediaStreamDestination();\n          })\n          .catch(error => {\n\n            throw new Error(error);\n          });\n      };\n\n      this[comunicatorSym].forEach(element => {\n\n        console.info(element);\n      });\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n\n    this[comunicatorSym] = new Comunicator(websocketUrl);\n    this[userMediaConstraintsSym] = getUserMediaConstr;\n    this[sdpConstraintsSym] = sdpConstr;\n  }\n\n  createChannel(channel) {\n\n    if (!channel) {\n\n      throw new Error('Missing mandatory <channel> parameter.');\n    }\n\n    this[comunicatorSym].sendTo(unknownPeerValue, {\n      'type': 'create-channel',\n      channel\n    }, true);\n  }\n\n  joinChannel(channel) {\n\n    if (!channel) {\n\n      throw new Error('Missing mandatory <channel> parameter.');\n    }\n\n    this[comunicatorSym].sendTo(unknownPeerValue, {\n      'type': 'join-channel',\n      channel\n    }, true);\n  }\n\n  streamOnChannel() {\n\n  }\n\n  sendTo() {\n\n  }\n\n  broadcast() {\n\n  }\n\n  approve() {\n\n  }\n\n  unApprove() {\n\n  }\n\n  leaveChannel() {\n\n  }\n\n  userIsPresent(whoami, token) {\n\n    return this[comunicatorSym].userIsPresent(whoami, token);\n  }\n\n  get userMediaConstraints() {\n\n    return this[userMediaConstraintsSym];\n  }\n\n  get sdpConstraints() {\n\n    return this[sdpConstraintsSym];\n  }\n\n  get stream() {\n\n    if (!this[myStreamSym]) {\n\n      throw new Error('Stream is not present. You have to ask this to the user');\n    }\n\n    return this[myStreamSym];\n  }\n}\n\nexport {Signaler};\n"],"names":["Comunicator"],"mappings":"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"}