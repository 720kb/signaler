{"version":3,"file":"signaler.js","sources":["../../lib/frontend/p2p.js","../../lib/frontend/p2p-manager.js"],"sourcesContent":["/*global RTCPeerConnection,RTCSessionDescription*/\nimport Rx from 'rxjs/Rx';\n\nconst sdpConstraints = {\n    'mandatory': {\n      'OfferToReceiveAudio': true,\n      'OfferToReceiveVideo': true\n    }\n  }\n  , rtcConfiguration = {\n    'iceServers': [\n      {\n        'urls': 'stun:stun.l.google.com:19302'\n      },\n      {\n        'urls': 'stun:23.21.150.121'\n      }\n    ]\n  }\n  , rtcOptions = {}\n  , rtcDataChannelOptions = {}\n  , iceCandidates = []\n  , peerConnectionSym = Symbol('peer-connection')\n  , dataChannelSym = Symbol('data-channel')\n  , myStreamSym = Symbol('my-stream');\n\nclass SignalerPeerConnection extends Rx.Observable {\n\n  constructor(sdpConstr = sdpConstraints) {\n\n    const internalObservable = new Rx.Observable(subscriber => {\n      const dataChannelError = error => {\n\n        subscriber.error({\n          'type': 'error',\n          'cause': error\n        });\n      }\n      , dataChannelMessage = event => {\n\n        if (event &&\n          event.data) {\n\n          if ((typeof event.data === 'string' || String.prototype.isPrototypeOf(event.data)) &&\n            event.data.indexOf('_signaler') >= 0) {\n\n            switch (event.data) {\n              case '_signaler:got-stream?': {\n\n                if (this[myStreamSym]) {\n\n                  subscriber.next({\n                    'type': 'add-stream',\n                    'stream': this[myStreamSym]\n                  });\n                } else {\n\n                  subscriber.next({\n                    'type': 'warn',\n                    'cause': 'Atm no stream'\n                  });\n                }\n                break;\n              }\n              default: {\n\n                subscriber.error({\n                  'type': 'warn',\n                  'cause': 'Not interesting event atm'\n                });\n              }\n            }\n          } else {\n\n            subscriber.next({\n              'type': 'datachannel-message',\n              'payload': event.data\n            });\n          }\n        } else {\n\n          subscriber.error({\n            'type': 'error',\n            'cause': 'Event data not present'\n          });\n        }\n      }\n      , dataChannelOpen = () => {\n\n        subscriber.next({\n          'type': 'datachannel-opened'\n        });\n      }\n      , dataChannelClose = () => {\n\n        subscriber.next({\n          'type': 'datachannel-closed'\n        });\n      };\n\n      this[peerConnectionSym] = new RTCPeerConnection(rtcConfiguration, rtcOptions);\n      this[dataChannelSym] = this[peerConnectionSym].createDataChannel('signaler-datachannel', rtcDataChannelOptions);\n\n      this[dataChannelSym].onerror = dataChannelError;\n      this[dataChannelSym].onmessage = dataChannelMessage;\n      this[dataChannelSym].onopen = dataChannelOpen;\n      this[dataChannelSym].onclose = dataChannelClose;\n\n      this[peerConnectionSym].onicecandidate = event => {\n\n        if (event.candidate) {\n\n          iceCandidates.push(event.candidate);\n        } else if (iceCandidates &&\n          iceCandidates.length >= 0) {\n\n          subscriber.next({\n            'type': 'use-ice-candidates',\n            'candidates': iceCandidates.splice(0, iceCandidates.length)\n          });\n        }\n      };\n\n      this[peerConnectionSym].onaddstream = event => {\n\n        if (!event ||\n          !event.stream) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'No stream arrived'\n          });\n        }\n\n        subscriber.next({\n          'type': 'add-stream',\n          'stream': event.stream\n        });\n      };\n\n      this[peerConnectionSym].onremovestream = event => {\n\n        if (!event ||\n          !event.stream) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'No stream arrived'\n          });\n        }\n\n        subscriber.next({\n          'type': 'remove-stream',\n          'stream': event.stream\n        });\n      };\n\n      this[peerConnectionSym].onnegotiationneeded = () => {\n\n        this[peerConnectionSym].createOffer()\n          .then(offer => {\n\n            this[peerConnectionSym].setLocalDescription(new RTCSessionDescription(offer));\n            return offer;\n          }, error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          })\n          .then(offer => {\n\n            subscriber.next({\n              'type': 'offer',\n              offer\n            });\n          })\n          .catch(error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          });\n      };\n\n      this[peerConnectionSym].oniceconnectionstatechange = event => {\n\n        if (!event ||\n          !event.target ||\n          !event.target.iceConnectionState) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'ice connection state changed without event value'\n          });\n        }\n\n        switch (event.target.iceConnectionState) {\n\n          case 'connected':\n          case 'completed': {\n\n            subscriber.next({\n              'type': 'ready'\n            });\n            break;\n          }\n\n          default: {\n\n            subscriber.next({\n              'type': 'ice-connection-state',\n              'state': event.target.iceConnectionState\n            });\n          }\n        }\n      };\n\n      this[peerConnectionSym].onsignalingstatechange = event => {\n\n        if (!event ||\n          !event.target ||\n          !event.target.signalingState) {\n\n          return subscriber.error({\n            'type': 'error',\n            'cause': 'signaling state changed without event value'\n          });\n        }\n\n        switch (event.target.signalingState) {\n\n          default: {\n\n            subscriber.next({\n              'type': 'signaling-state',\n              'state': event.target.signalingState\n            });\n          }\n        }\n      };\n\n      this[peerConnectionSym].ondatachannel = event => {\n\n        if (!event ||\n          !event.channel) {\n\n          return subscriber.error({\n            'type': 'error',\n            'cause': 'channel in event is not present'\n          });\n        }\n\n        event.channel.onerror = dataChannelError;\n        event.channel.onmessage = dataChannelMessage;\n        event.channel.onopen = dataChannelOpen;\n        event.channel.onclose = dataChannelClose;\n      };\n\n      this.setRemoteDescription = payload => {\n\n        this[peerConnectionSym].setRemoteDescription(new RTCSessionDescription(payload))\n          .then(() => {\n\n            return this[peerConnectionSym].createAnswer(this.sdpConstr);\n          }, error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          })\n          .then(answer => {\n\n            this[peerConnectionSym].setLocalDescription(new RTCSessionDescription(answer));\n            return answer;\n          }, error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          })\n          .then(answer => {\n\n            subscriber.next({\n              'type': 'answer',\n              answer\n            });\n          })\n          .catch(error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          });\n      };\n\n      return () => {\n\n        this[dataChannelSym].close();\n        this[peerConnectionSym].close();\n      };\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n\n    this.sdpConstr = sdpConstr;\n  }\n\n  get dataChannel() {\n\n    if (!this[dataChannelSym]) {\n\n      throw new Error('Datachannel is not created');\n    }\n\n    return this[dataChannelSym];\n  }\n\n  get stream() {\n\n    if (!this[myStreamSym]) {\n\n      throw new Error('Stream is not present. You have to ask this to the user');\n    }\n\n    return this[myStreamSym];\n  }\n}\n\nexport default SignalerPeerConnection;\n","import Rx from 'rxjs/Rx';\nimport {Comunicator} from 'comunicator';\nimport SignalerPeerConnection from './p2p.js';\n\nconst comunicatorSym = Symbol('comunicator')\n\nclass Signaler extends Rx.Observable {\n  constructor(websocketUrl) {\n\n    const internalObservable = new Rx.Observable(subscriber => {\n\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n\n    this[comunicatorSym] = new Comunicator(websocketUrl);\n  }\n}\n"],"names":["Comunicator"],"mappings":"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"}