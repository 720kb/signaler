{"version":3,"file":"signaler.js","sources":["../../lib/frontend/p2p.js","../../lib/frontend/signaler.js"],"sourcesContent":["/*global RTCPeerConnection,RTCSessionDescription,RTCIceCandidate*/\nimport Rx from 'rxjs/Rx';\n\nconst rtcConfiguration = {\n    'iceServers': [\n      {\n        'urls': 'stun:stun.l.google.com:19302'\n      },\n      {\n        'urls': 'stun:23.21.150.121'\n      }\n    ]\n  }\n  , rtcOptions = {}\n  , rtcDataChannelOptions = {}\n  , iceCandidatesSym = Symbol('ice-candidates')\n  , peerConnectionSym = Symbol('peer-connection')\n  , dataChannelSym = Symbol('data-channel');\n\nclass SignalerPeerConnection extends Rx.Observable {\n\n  constructor(sdpConstr, joiner = false) {\n\n    if (!sdpConstr) {\n\n      throw new Error('Manadatory spd constraints missing.');\n    }\n\n    const internalObservable = new Rx.Observable(subscriber => {\n      const dataChannelError = error => {\n\n        subscriber.error({\n          'type': 'error',\n          'cause': error\n        });\n      }\n      , dataChannelMessage = event => {\n\n        if (event &&\n          event.data) {\n\n          if ((typeof event.data === 'string' || String.prototype.isPrototypeOf(event.data)) &&\n            event.data.indexOf('_signaler') >= 0) {\n\n            switch (event.data) {\n              case '_signaler:got-stream?': {\n\n                subscriber.next({\n                  'type': 'add-stream'\n                });\n                break;\n              }\n              default: {\n\n                subscriber.error({\n                  'type': 'warn',\n                  'cause': 'Not interesting event atm'\n                });\n              }\n            }\n          } else {\n\n            subscriber.next({\n              'type': 'datachannel-message',\n              'payload': JSON.parse(event.data)\n            });\n          }\n        } else {\n\n          subscriber.error({\n            'type': 'error',\n            'cause': 'Event data not present'\n          });\n        }\n      }\n      , dataChannelOpen = () => {\n\n        subscriber.next({\n          'type': 'datachannel-opened'\n        });\n      }\n      , dataChannelClose = () => {\n\n        subscriber.next({\n          'type': 'datachannel-closed'\n        });\n      }\n      , negotiationNeeded = () => {\n\n        this[peerConnectionSym].createOffer()\n          .then(offer => {\n\n            subscriber.next({\n              'type': 'offer',\n              offer\n            });\n            return Promise.all([\n              this[peerConnectionSym].setLocalDescription(new RTCSessionDescription(offer)),\n              Promise.resolve(offer)\n            ]);\n          })\n          .then(resolved => subscriber.next({\n            'type': 'offer-set',\n            'offer': resolved[1]\n          }))\n          .catch(error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          });\n      };\n\n      this[peerConnectionSym] = new RTCPeerConnection(rtcConfiguration, rtcOptions);\n      if (!joiner) {\n\n        this[dataChannelSym] = this[peerConnectionSym].createDataChannel('signaler-datachannel', rtcDataChannelOptions);\n        this[dataChannelSym].onerror = dataChannelError;\n        this[dataChannelSym].onmessage = dataChannelMessage;\n        this[dataChannelSym].onopen = dataChannelOpen;\n        this[dataChannelSym].onclose = dataChannelClose;\n      }\n\n      this[peerConnectionSym].onnegotiationneeded = negotiationNeeded;\n\n      this[peerConnectionSym].onicecandidate = event => {\n\n        if (event.candidate) {\n\n          this[iceCandidatesSym].push(event.candidate);\n        } else if (this[iceCandidatesSym] &&\n          this[iceCandidatesSym].length >= 0) {\n\n          subscriber.next({\n            'type': 'use-ice-candidates',\n            'candidates': this[iceCandidatesSym].splice(0, this[iceCandidatesSym].length)\n          });\n        }\n      };\n\n      this[peerConnectionSym].onaddstream = event => {\n\n        if (!event ||\n          !event.stream) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'No stream arrived'\n          });\n        }\n\n        subscriber.next({\n          'type': 'add-stream',\n          'stream': event.stream\n        });\n      };\n\n      this[peerConnectionSym].onremovestream = event => {\n\n        if (!event ||\n          !event.stream) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'No stream arrived'\n          });\n        }\n\n        subscriber.next({\n          'type': 'remove-stream',\n          'stream': event.stream\n        });\n      };\n\n      this[peerConnectionSym].oniceconnectionstatechange = event => {\n\n        if (!event ||\n          !event.target ||\n          !event.target.iceConnectionState) {\n\n          return subscriber.error({\n            'type': 'warning',\n            'cause': 'ice connection state changed without event value'\n          });\n        }\n\n        switch (event.target.iceConnectionState) {\n\n          case 'connected':\n          case 'completed': {\n\n            subscriber.next({\n              'type': 'ready',\n              'state': event.target.iceConnectionState\n            });\n            break;\n          }\n\n          default: {\n\n            subscriber.next({\n              'type': 'ice-connection-state',\n              'state': event.target.iceConnectionState\n            });\n          }\n        }\n      };\n\n      this[peerConnectionSym].onsignalingstatechange = event => {\n\n        if (!event ||\n          !event.target ||\n          !event.target.signalingState) {\n\n          return subscriber.error({\n            'type': 'error',\n            'cause': 'signaling state changed without event value'\n          });\n        }\n\n        switch (event.target.signalingState) {\n\n          default: {\n\n            subscriber.next({\n              'type': 'signaling-state',\n              'state': event.target.signalingState\n            });\n          }\n        }\n      };\n\n      this[peerConnectionSym].ondatachannel = event => {\n\n        if (!event ||\n          !event.channel) {\n\n          return subscriber.error({\n            'type': 'error',\n            'cause': 'channel in event is not present'\n          });\n        }\n\n        this[dataChannelSym] = event.channel;\n        event.channel.onerror = dataChannelError;\n        event.channel.onmessage = dataChannelMessage;\n        event.channel.onopen = dataChannelOpen;\n        event.channel.onclose = dataChannelClose;\n      };\n\n      this.setAnswer = answer => {\n\n        this[peerConnectionSym].setRemoteDescription(new RTCSessionDescription(answer))\n          .then(() => {\n\n            subscriber.next({\n              'type': 'answer-set',\n              answer\n            });\n          });\n      };\n\n      this.setOffer = offer => {\n\n        this[peerConnectionSym].setRemoteDescription(new RTCSessionDescription(offer))\n          .then(() => {\n\n            subscriber.next({\n              'type': 'offer-set',\n              offer\n            });\n            return this[peerConnectionSym].createAnswer(this.sdpConstr);\n          })\n          .then(answer => {\n\n            subscriber.next({\n              'type': 'answer',\n              answer\n            });\n            return Promise.all([\n              this[peerConnectionSym].setLocalDescription(new RTCSessionDescription(answer)),\n              Promise.resolve(answer)\n            ]);\n          })\n          .then(resolved => subscriber.next({\n            'type': 'answer-set',\n            'answer': resolved[1]\n          }))\n          .catch(error => {\n\n            subscriber.error({\n              'type': 'error',\n              'cause': error\n            });\n          });\n      };\n\n      return () => {\n\n        this[dataChannelSym].close();\n        this[peerConnectionSym].close();\n      };\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n\n    this[iceCandidatesSym] = [];\n    this.sdpConstr = sdpConstr;\n  }\n\n  addIceCandidates(candidates) {\n\n    if (candidates) {\n\n      candidates.forEach(element => this[peerConnectionSym].addIceCandidate(new RTCIceCandidate(element)));\n    } else {\n\n      throw new Error('Invalid candidates');\n    }\n  }\n\n  get dataChannel() {\n\n    if (!this[dataChannelSym]) {\n\n      throw new Error('Datachannel is not created');\n    }\n\n    return this[dataChannelSym];\n  }\n}\n\nexport {SignalerPeerConnection};\n","/*global window,navigator*/\nimport Rx from 'rxjs/Rx';\nimport {Comunicator} from 'comunicator';\nimport {SignalerPeerConnection} from './p2p.js';\n\nconst comunicatorSym = Symbol('comunicator')\n  , myStreamSym = Symbol('my-stream')\n  , userMediaConstraintsSym = Symbol('user-media-constraint')\n  , sdpConstraintsSym = Symbol('sdp-constraints')\n  , initiatorsSym = Symbol('initiators')\n  , peersSym = Symbol('peers')\n  , unknownPeerValue = 'unknown-peer'\n  , getUserMediaConstraints = {\n    'audio': true,\n    'video': true\n  }\n  , sdpConstraints = {\n    'mandatory': {\n      'OfferToReceiveAudio': true,\n      'OfferToReceiveVideo': true\n    }\n  };\n\nclass Signaler extends Rx.Observable {\n  constructor(websocketUrl, getUserMediaConstr = getUserMediaConstraints, sdpConstr = sdpConstraints, debug = false) {\n\n    const internalObservable = new Rx.Observable(subscriber => {\n\n      this[comunicatorSym]\n        .filter(element => element.what &&\n          element.what.type === 'do-handshake')\n        .forEach(element => {\n\n          if (element.whoami &&\n            element.what.channel) {\n            const p2pConnection = new SignalerPeerConnection(sdpConstr);\n\n            this[initiatorsSym].set(element.what.channel, element.who);\n            if (debug) {\n\n              p2pConnection.forEach(debugElement => console.info(debugElement));\n            }\n\n            p2pConnection\n              .filter(fromPeerConnection => fromPeerConnection.type === 'offer')\n              .forEach(fromPeerConnection => this[comunicatorSym].sendTo(element.whoami, {\n                'channel': element.what.channel,\n                'offer': fromPeerConnection.offer\n              }));\n\n            p2pConnection\n              .filter(fromPeerConnection => fromPeerConnection.type === 'use-ice-candidates')\n              .forEach(fromPeerConnection => this[comunicatorSym].sendTo(element.whoami, {\n                'channel': element.what.channel,\n                'candidates': fromPeerConnection.candidates\n              }));\n\n            p2pConnection\n              .filter(fromPeerConnection => fromPeerConnection.type === 'datachannel-message')\n              .forEach(fromPeerConnection => subscriber.next(fromPeerConnection));\n            this[peersSym].set(`${element.what.channel}-${element.who}`, p2pConnection);\n          } else {\n\n            window.setTimeout(() => {\n\n              throw new Error('Missing sender and channel that are mandatory');\n            });\n          }\n        });\n\n      this[comunicatorSym]\n        .filter(element => element.what &&\n        element.what.offer)\n        .forEach(element => {\n\n          if (element.whoami &&\n            element.what.channel &&\n            element.what.offer) {\n            let p2pConnection;\n\n            if (this[peersSym].has(`${element.what.channel}-${element.who}`)) {\n\n              p2pConnection = this[peersSym].get(`${element.what.channel}-${element.who}`);\n            } else {\n              p2pConnection = new SignalerPeerConnection(sdpConstr, true);\n\n              this[initiatorsSym].set(element.what.channel, element.whoami);\n              this[peersSym].set(`${element.what.channel}-${element.who}`, p2pConnection);\n            }\n\n            if (debug) {\n\n              p2pConnection.forEach(debugElement => console.info(debugElement));\n            }\n\n            p2pConnection\n              .filter(fromPeerConnection => fromPeerConnection.type === 'answer')\n              .forEach(fromPeerConnection => this[comunicatorSym].sendTo(element.whoami, {\n                'channel': element.what.channel,\n                'answer': fromPeerConnection.answer\n              }));\n\n            p2pConnection\n              .filter(fromPeerConnection => fromPeerConnection.type === 'use-ice-candidates')\n              .forEach(fromPeerConnection => this[comunicatorSym].sendTo(element.whoami, {\n                'channel': element.what.channel,\n                'candidates': fromPeerConnection.candidates\n              }));\n\n            p2pConnection\n              .filter(fromPeerConnection => fromPeerConnection.type === 'datachannel-message')\n              .forEach(fromPeerConnection => subscriber.next(fromPeerConnection));\n            p2pConnection.setOffer(element.what.offer);\n          } else {\n\n            window.setTimeout(() => {\n\n              throw new Error('Missing sender, channel and the offer that are mandatory');\n            });\n          }\n        });\n\n      this[comunicatorSym]\n        .filter(element => element.what &&\n        element.what.answer)\n        .forEach(element => {\n\n          if (element.whoami &&\n            element.what.channel &&\n            element.what.answer) {\n            let p2pConnection;\n\n            if (this[peersSym].has(`${element.what.channel}-${element.who}`)) {\n\n              p2pConnection = this[peersSym].get(`${element.what.channel}-${element.who}`);\n            } else {\n\n              window.setTimeout(() => {\n\n                throw new Error('The peer connection must be already enstablished');\n              });\n            }\n\n            p2pConnection.setAnswer(element.what.answer);\n          } else {\n\n            window.setTimeout(() => {\n\n              throw new Error('Missing sender, channel and the answer that are mandatory');\n            });\n          }\n        });\n\n      this[comunicatorSym]\n        .filter(element => element.what &&\n        element.what.candidates)\n        .forEach(element => {\n          let p2pConnection;\n\n          if (this[peersSym].has(`${element.what.channel}-${element.who}`)) {\n\n            p2pConnection = this[peersSym].get(`${element.what.channel}-${element.who}`);\n          } else {\n\n            window.setTimeout(() => {\n\n              throw new Error('The peer connection must be already enstablished');\n            });\n          }\n\n          p2pConnection.addIceCandidates(element.what.candidates);\n        });\n\n      this.getUserMedia = () => {\n\n        navigator.mediaDevices.getUserMedia(this.userMediaConstraints)\n          .then(localStream => {\n\n            if (!this[myStreamSym]) {\n\n              subscriber.next({\n                'type': 'my-stream',\n                'stream': localStream\n              });\n              this[myStreamSym] = localStream;\n            }\n\n            //TODO try to put the contextified audio\n            //audioContext.createMediaStreamSource(myStream);\n            //, contextifiedLocalStream = audioContext.createMediaStreamDestination();\n          })\n          .catch(error => {\n\n            throw new Error(error);\n          });\n      };\n    }).share();\n\n    super(observer => {\n\n      const subscriptionToInternalObservable = internalObservable\n        .subscribe(observer);\n\n      return () => {\n\n        subscriptionToInternalObservable.unsubscribe();\n      };\n    });\n\n    this[comunicatorSym] = new Comunicator(websocketUrl);\n    this[userMediaConstraintsSym] = getUserMediaConstr;\n    this[sdpConstraintsSym] = sdpConstr;\n    this[peersSym] = new Map();\n    this[initiatorsSym] = new Map();\n  }\n\n  createChannel(channel) {\n\n    if (!channel) {\n\n      throw new Error('Missing mandatory <channel> parameter.');\n    }\n\n    this[comunicatorSym].sendTo(unknownPeerValue, {\n      'type': 'create-channel',\n      channel\n    }, true);\n  }\n\n  joinChannel(channel) {\n\n    if (!channel) {\n\n      throw new Error('Missing mandatory <channel> parameter.');\n    }\n\n    this[comunicatorSym].sendTo(unknownPeerValue, {\n      'type': 'join-channel',\n      channel\n    }, true);\n  }\n\n  streamOnChannel() {\n\n  }\n\n  sendTo(channel, who, what) {\n\n    if (this[peersSym].has(`${channel}-${who}`)) {\n      const dataChannel = this[peersSym].get(`${channel}-${who}`).dataChannel;\n\n      dataChannel.send(JSON.stringify(what));\n    } else {\n\n      throw new Error(`User ${who} for channel ${channel} do not exist`);\n    }\n  }\n\n  broadcast(channel, what) {\n    const mapKeys = this[peersSym].keys();\n\n    for (const aMapKey of mapKeys) {\n      const channelAndWho = aMapKey.split('-');\n\n      if (channelAndWho[0] === String(channel)) {\n        const dataChannel = this[peersSym].get(aMapKey).dataChannel;\n\n        dataChannel.send(JSON.stringify(what));\n      }\n    }\n  }\n\n  approve() {\n\n  }\n\n  unApprove() {\n\n  }\n\n  leaveChannel() {\n\n  }\n\n  userIsPresent(whoami, token) {\n\n    return this[comunicatorSym].userIsPresent(whoami, token);\n  }\n\n  get userMediaConstraints() {\n\n    return this[userMediaConstraintsSym];\n  }\n\n  get sdpConstraints() {\n\n    return this[sdpConstraintsSym];\n  }\n\n  get stream() {\n\n    if (!this[myStreamSym]) {\n\n      throw new Error('Stream is not present. You have to ask this to the user');\n    }\n\n    return this[myStreamSym];\n  }\n\n  get peers() {\n\n    return this[peersSym];\n  }\n\n  get initiators() {\n\n    return this[initiatorsSym];\n  }\n}\n\nexport {Signaler};\n"],"names":["Comunicator"],"mappings":"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"}